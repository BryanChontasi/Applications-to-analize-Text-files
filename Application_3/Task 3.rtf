{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12420\viewh17480\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Task 3- Application3\
\
Write another version of the statistics gathering Java program (using a different NetBeans project), but this time two further pieces of statistical information are required:-\
\
How many times each unique word appears in the sonnet (ignoring case)\
A list of all unique words that appear four or more times\
\
You are required to test your solution to this task using the test file, \'91sonnet3.txt\'92. \
\
This program should account for punctuation in the same way as Task 2 above. \
\
The output to this program should start similar to above i.e.,\
\
	
\f1\i File analysed: sonnet3.txt\
	There were W words and Y letters\
	There were Y even words, and Z odd words
\f0\i0 \
\
This should be followed by a mapping of unique words to their frequency as follows:-\
\
	
\f1\i WORD1 [FREQUENCY]\
	WORD2 [FREQUENCY]\
	Etc.
\f0\i0 \
\
This should be then followed by the list of most frequent words (i.e., those that occur at least 4 times)\
\
Copy and paste the output of this program to your solution document}